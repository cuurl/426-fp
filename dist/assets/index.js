var L=Object.defineProperty;var v=(o,n,l)=>n in o?L(o,n,{enumerable:!0,configurable:!0,writable:!0,value:l}):o[n]=l;var t=(o,n,l)=>v(o,typeof n!="symbol"?n+"":n,l);import{G as x,E as P,I as w,P as M,W as T,A as g,S as A,a as H,H as S,b as F,c as E,N as O,B as C,d as b,L as V,T as k,e as z,f as B,R as W,U as j,V as G,g as q,h as R,i as d,M as f,C as N,O as D,j as J,k as y,l as U,m as X,n as K,o as Y,p as $,q as Q,r as Z,__tla as ee}from"./ObstacleManager.js";Promise.all([(()=>{try{return ee}catch{}})()]).then(async()=>{class o{constructor(){this._previousTime=0,this._currentTime=0,this._startTime=n(),this._delta=0,this._elapsed=0,this._timescale=1,this._usePageVisibilityAPI=typeof document<"u"&&document.hidden!==void 0,this._usePageVisibilityAPI===!0&&(this._pageVisibilityHandler=l.bind(this),document.addEventListener("visibilitychange",this._pageVisibilityHandler,!1))}getDelta(){return this._delta/1e3}getElapsed(){return this._elapsed/1e3}getTimescale(){return this._timescale}setTimescale(e){return this._timescale=e,this}reset(){return this._currentTime=n()-this._startTime,this}dispose(){return this._usePageVisibilityAPI===!0&&document.removeEventListener("visibilitychange",this._pageVisibilityHandler),this}update(e){return this._usePageVisibilityAPI===!0&&document.hidden===!0?this._delta=0:(this._previousTime=this._currentTime,this._currentTime=(e!==void 0?e:n())-this._startTime,this._delta=(this._currentTime-this._previousTime)*this._timescale,this._elapsed+=this._delta),this}}function n(){return performance.now()}function l(){document.hidden===!1&&this.reset()}let s=await new x().loadAsync(P);class _{constructor(e=!1){t(this,"renderer",null);t(this,"scene",null);t(this,"camera",null);t(this,"lights",[]);t(this,"tanFOV",null);t(this,"initialWindowHeight",null);t(this,"laneObjects",[]);t(this,"composer",null);t(this,"audio",null);t(this,"listener",null);t(this,"mixer",null);t(this,"world",null);t(this,"obstacleManager",null);t(this,"lanes",[]);t(this,"currentLane",null);t(this,"currentLaneIndex",w);t(this,"t",.001);t(this,"tStep",.001);t(this,"score",0);t(this,"gameOver",!1);this.threeInit(),this.player=new M(this.scene,this.listener),this.player.isInvincible=!0,this.gameOver=!1,this.cannonInit(),this.inputInit(),e&&this.utilInit(),this.camera.position.x=80,this.camera.position.y=10,this.camera.position.z=80,this.camera.lookAt(s.position),this.animate=this.animate.bind(this)}threeInit(e=!0){this.renderer=new T({antialias:!0}),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.toneMapping=g,this.scene=new A,this.camera=new H(90,window.innerWidth/window.innerHeight,1,3e4),document.body.appendChild(this.renderer.domElement),this.tanFOV=Math.tan(Math.PI/180*this.camera.fov/2),this.initialWindowHeight=window.innerHeight,window.addEventListener("resize",h=>{this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.fov=360/Math.PI*Math.atan(this.tanFOV*(window.innerHeight/this.initialWindowHeight)),this.camera.updateProjectionMatrix(),this.camera.lookAt(this.scene.position),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.render(this.scene,this.camera)});const i=new S(16777147,16777215,2);this.lights.push(i),this.scene.add(i),this.scene.add(new F(i)),this.floor=new E,this.scene.add(this.floor.basePlane),this.lanes=this.floor.validLanes,this.laneObjects=[];for(const h of this.lanes){const m=h.getPoints(O),p=new C().setFromPoints(m),u=new b({fresnelAmount:.9,fresnelOpacity:.9,hologramBrightness:1.7,scanlineSize:2,signalSpeed:2.3,hologramColor:"#89CFF0",hologramOpacity:.6,enableBlinking:!0}),c=new V(p,u);c.rotateX(-Math.PI/2),c.position.set(0,k,0),c.visible=e,this.scene.add(c),this.laneObjects.push(c)}this.mixer=new z(s.scene),this.mixer.clipAction(s.animations[0]).play(),console.log(s),s=s.scene,s.position.set(0,-13.9,0),s.scale.set(25,25,25),s.visible=!0,s.traverse(h=>{h.material&&(h.material=new b({fresnelAmount:.3,fresnelOpacity:.3,hologramBrightness:.1,scanlineSize:2,signalSpeed:2.3,hologramColor:"#89CFF0",hologramOpacity:.4,enableBlinking:!0}))}),this.scene.add(s),this.currentLane=this.lanes[w],this.composer=new B(this.renderer);const r=new W(4,this.scene,this.camera),a=new j(new G(window.innerWidth,window.innerHeight));a.strength=.5,a.radius=.1,this.composer.addPass(r),this.composer.addPass(a)}cannonInit(){this.world=new q({gravity:R}),this.world.gravity=new d(0,0,0),this.player.world=this.world,this.world.addBody(this.floor.body),this.world.addBody(this.player.body);const e=new f("player"),i=new f("obstacle"),r=new N(e,i,{friction:0,restitution:.3});this.world.addContactMaterial(r),this.player.body.material=e,this.obstacleManager=new D(this.player,this.scene,this.world,this.currentLane.xRadius,i,this.listener)}utilInit(){this.gui=new J;const e=this.gui.addFolder("Tuning");e.add(this,"tStep",0,1,.001),e.open();const i=this.gui.addFolder("Player");i.add(y,"x",-100,100,1),i.add(y,"y",-100,100,1),i.add(y,"z",-100,100,1),i.add(this.player,"currentModelIndex",[0,1,2,3]).name("Player model").onChange(h=>{this.player.currentModelIndex=h,this.player.chooseModel(this.scene)}),i.add(this.player,"meshScaleFactor",.01,2).name("Full scale").onChange(()=>{this.player.meshScale.multiplyScalar(this.player.meshScaleFactor),this.player.mesh.scale.copy(this.player.meshScale)});const r=this.gui.addFolder("Graphics");r.add(this.renderer,"toneMapping",{No:U,Linear:X,Reinhard:K,Cineon:Y,ACESFilmic:g}),r.add(this.renderer,"toneMappingExposure",0,10,.001);const a=this.gui.addFolder("Camera");a.add(this.camera.position,"x",-1e3,1e3,1),a.add(this.camera.position,"y",-1e3,1e3,1),a.add(this.camera.position,"z",-1e3,1e3,1)}inputInit(){document.addEventListener("keydown",e=>{switch(e.code){case"ArrowRight":this.currentLaneIndex++,this.currentLaneIndex=Math.min(this.currentLaneIndex,this.floor.validLanes.length-1),this.currentLane=this.floor.validLanes[this.currentLaneIndex];break;case"ArrowLeft":this.currentLaneIndex--,this.currentLaneIndex=Math.max(this.currentLaneIndex,0),this.currentLane=this.floor.validLanes[this.currentLaneIndex];break;case"Enter":this.inGame=!0,this.player.health=3,this.timer=new o,$();break;case"Space":this.player.shoot(),this.player.displayWorld();break}})}animate(){(this.gameOver||this.player.health<=0)&&document.location.replace("./death.html"),requestAnimationFrame(this.animate),this.inGame?(this.timer.update(),this.timer.getElapsed()>Q&&(this.player.isInvincible=!1)):this.camera.lookAt(s.position),this.player.health<=0&&(this.gameOver=!0),this.t+=this.tStep,this.t>=1&&(this.t=.001),this.score++;const e=this.player.worldPosition(),i=this.currentLane.getPointAt(this.t),r=i.x,a=i.y,h=e.z;this.player.mesh.position.lerp(new d(r,-13.5,-a),.1);const m=new d().subVectors(new d(r,a,h),e).normalize();this.player.mesh.lookAt(m);const p=new d().subVectors(new d(r,-13.5,-a),e).normalize();this.player.forwardVector=p,this.inGame&&Z(this.camera,this.player),this.mixer&&this.mixer.update(1/60),this.player.body.position.copy(this.player.mesh.position),this.player.body.quaternion.copy(this.player.mesh.quaternion),this.world.fixedStep();const u=Math.atan2(-e.z,e.x);this.obstacleManager.update(u,this.player.body.position),this.player.updateProjectiles(),this.inGame?(document.getElementById("score").innerHTML=this.score,document.getElementById("coins").innerHTML="Coins: "+this.player.coins):(document.getElementById("score").innerHTML="Press Enter to play.",document.getElementById("coins").innerHTML=""),this.composer.render()}}new _(!1).animate()});
